{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport colors from \"../config/colors\";\nimport { Feather } from '@expo/vector-icons';\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MessageInput = function MessageInput() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var sendMessage = function sendMessage() {\n    console.warn(\"sending: \", message);\n    setMessage('');\n  };\n\n  var onSendPressed = function onSendPressed() {\n    console.warn(\"Send pressed\");\n  };\n\n  var onPress = function onPress() {\n    if (message) {\n      sendMessage();\n    } else {\n      onSendPressed();\n    }\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: styles.root,\n    keyboardVerticalOffset: 50,\n    children: _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: message,\n        placeholder: \"Type a message...\",\n        onChangeText: setMessage\n      }), _jsx(Pressable, {\n        onPress: onPress,\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          style: styles.button,\n          children: message ? _jsx(Feather, {\n            name: \"send\",\n            size: 24,\n            color: colors.pink\n          }) : _jsx(Feather, {\n            name: \"send\",\n            size: 24,\n            color: colors.messageGray\n          })\n        })\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    backgroundColor: colors.light,\n    borderRadius: 15,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: \"space-between\",\n    maxWidth: '90%',\n    shadowColor: colors.greytext,\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 1,\n    shadowRadius: 8,\n    marginVertical: 10,\n    padding: 10\n  },\n  input: {\n    flex: 1\n  },\n  buttonContainer: {\n    width: 50,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: \"center\"\n  }\n});\nexport default MessageInput;","map":{"version":3,"sources":["C:/Users/Nate_Barcelona/OneDrive/Documents/GitHub/Plenty-of-Pups/app/components/MessageInput.js"],"names":["React","useState","colors","Feather","TouchableOpacity","MessageInput","message","setMessage","sendMessage","console","warn","onSendPressed","onPress","Platform","OS","styles","root","inputContainer","input","buttonContainer","button","pink","messageGray","StyleSheet","create","flexDirection","justifyContent","backgroundColor","light","borderRadius","flex","maxWidth","shadowColor","greytext","shadowOffset","width","height","shadowOpacity","shadowRadius","marginVertical","padding","alignItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AASA,OAAOC,MAAP;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvB,kBAA8BJ,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOK,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAEtBC,IAAAA,OAAO,CAACC,IAAR,CAAa,WAAb,EAA0BJ,OAA1B;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAJD;;AAKA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBF,IAAAA,OAAO,CAACC,IAAR,CAAa,cAAb;AACH,GAFD;;AAGA,MAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,QAAIN,OAAJ,EAAa;AACTE,MAAAA,WAAW;AACd,KAFD,MAEO;AACHG,MAAAA,aAAa;AAChB;AACJ,GAND;;AAWA,SACI,KAAC,oBAAD;AACI,IAAA,QAAQ,EAAEE,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QADlD;AAEI,IAAA,KAAK,EAAEC,MAAM,CAACC,IAFlB;AAGI,IAAA,sBAAsB,EAAE,EAH5B;AAAA,cAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA,iBACI,KAAC,SAAD;AACI,QAAA,KAAK,EAAEF,MAAM,CAACG,KADlB;AAEI,QAAA,KAAK,EAAEZ,OAFX;AAGI,QAAA,WAAW,EAAC,mBAHhB;AAII,QAAA,YAAY,EAAEC;AAJlB,QADJ,EAOI,KAAC,SAAD;AAAW,QAAA,OAAO,EAAEK,OAApB;AAA6B,QAAA,KAAK,EAAEG,MAAM,CAACI,eAA3C;AAAA,kBACI,KAAC,gBAAD;AAAkB,UAAA,KAAK,EAAEJ,MAAM,CAACK,MAAhC;AAAA,oBACKd,OAAO,GAAG,KAAC,OAAD;AAAS,YAAA,IAAI,EAAC,MAAd;AAAqB,YAAA,IAAI,EAAE,EAA3B;AAA+B,YAAA,KAAK,EAAEJ,MAAM,CAACmB;AAA7C,YAAH,GAA2D,KAAC,OAAD;AAAS,YAAA,IAAI,EAAC,MAAd;AAAqB,YAAA,IAAI,EAAE,EAA3B;AAA+B,YAAA,KAAK,EAAEnB,MAAM,CAACoB;AAA7C;AADvE;AADJ,QAPJ;AAAA;AALJ,IADJ;AAsBH,CA5CD;;AA8CA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,IAAI,EAAE;AACFS,IAAAA,aAAa,EAAE,KADb;AAEFC,IAAAA,cAAc,EAAE;AAFd,GADuB;AAK7BT,EAAAA,cAAc,EAAE;AACZU,IAAAA,eAAe,EAAEzB,MAAM,CAAC0B,KADZ;AAEZC,IAAAA,YAAY,EAAE,EAFF;AAGZC,IAAAA,IAAI,EAAE,CAHM;AAIZL,IAAAA,aAAa,EAAE,KAJH;AAKZC,IAAAA,cAAc,EAAE,eALJ;AAMZK,IAAAA,QAAQ,EAAE,KANE;AAOZC,IAAAA,WAAW,EAAE9B,MAAM,CAAC+B,QAPR;AAQZC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KARF;AASZC,IAAAA,aAAa,EAAE,CATH;AAUZC,IAAAA,YAAY,EAAE,CAVF;AAWZC,IAAAA,cAAc,EAAE,EAXJ;AAYZC,IAAAA,OAAO,EAAE;AAZG,GALa;AAmB7BtB,EAAAA,KAAK,EAAE;AACHY,IAAAA,IAAI,EAAE;AADH,GAnBsB;AAsB7BX,EAAAA,eAAe,EAAE;AACbgB,IAAAA,KAAK,EAAE,EADM;AAEbC,IAAAA,MAAM,EAAE,EAFK;AAGbV,IAAAA,cAAc,EAAE,QAHH;AAIbe,IAAAA,UAAU,EAAE;AAJC;AAtBY,CAAlB,CAAf;AA+BA,eAAepC,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    View,\r\n    TextInput,\r\n    KeyboardAvoidingView,\r\n    StyleSheet,\r\n    Pressable,\r\n    Platform\r\n} from 'react-native'\r\nimport colors from \"../config/colors\";\r\nimport { Feather } from '@expo/vector-icons';\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\n\r\nconst MessageInput = () => {\r\n\r\n    const [message, setMessage] = useState('');\r\n    const sendMessage = () => {\r\n        //send message\r\n        console.warn(\"sending: \", message)\r\n        setMessage('');\r\n    }\r\n    const onSendPressed = () => {\r\n        console.warn(\"Send pressed\");\r\n    }\r\n    const onPress = () => {\r\n        if (message) {\r\n            sendMessage();\r\n        } else {\r\n            onSendPressed();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n            style={styles.root}\r\n            keyboardVerticalOffset={50}\r\n        >\r\n            <View style={styles.inputContainer}>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    value={message}\r\n                    placeholder='Type a message...'\r\n                    onChangeText={setMessage}\r\n                />\r\n                <Pressable onPress={onPress} style={styles.buttonContainer}>\r\n                    <TouchableOpacity style={styles.button}>\r\n                        {message ? <Feather name=\"send\" size={24} color={colors.pink} /> : <Feather name=\"send\" size={24} color={colors.messageGray} />}\r\n                    </TouchableOpacity>\r\n                </Pressable>\r\n            </View>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n    },\r\n    inputContainer: {\r\n        backgroundColor: colors.light,\r\n        borderRadius: 15,\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: \"space-between\",\r\n        maxWidth: '90%',\r\n        shadowColor: colors.greytext,\r\n        shadowOffset: { width: 0, height: 8 },\r\n        shadowOpacity: 1,\r\n        shadowRadius: 8,\r\n        marginVertical: 10,\r\n        padding: 10\r\n    },\r\n    input: {\r\n        flex: 1,\r\n    },\r\n    buttonContainer: {\r\n        width: 50,\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: \"center\",\r\n\r\n    }\r\n})\r\n\r\nexport default MessageInput"]},"metadata":{},"sourceType":"module"}