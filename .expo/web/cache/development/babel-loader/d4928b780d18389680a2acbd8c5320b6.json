{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport ErrorMessage from \"../components/forms/ErrorMessage\";\nimport AppText from \"../components/AppText\";\nimport PinkAppButton from \"../components/PinkAppButton\";\nimport PurpleAppButton from \"../components/PurpleAppButton\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport Screen from \"../components/Screen\";\nimport colors from \"../config/colors\";\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).label(\"Password\")\n});\n\nfunction LoginScreen(props) {\n  return _jsx(View, {\n    style: styles.background,\n    children: _jsxs(Screen, {\n      children: [_jsx(Image, {\n        style: styles.logo,\n        source: require(\"../assets/PofP1.png\")\n      }), _jsxs(AppForm, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: function onSubmit(values) {\n          return console.log(values);\n        },\n        validationSchema: validationSchema,\n        children: [_jsx(AppFormField, {\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          icon: \"email\",\n          keyboardtype: \"email-address\",\n          name: \"email\",\n          placeholder: \"Email\",\n          textContentType: \"emailAddress\"\n        }), _jsx(AppFormField, {\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          icon: \"lock\",\n          name: \"password\",\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          textContentType: \"password\"\n        }), _jsx(Text, {\n          style: styles.forgotpassword,\n          children: \"Forgot my password\"\n        }), _jsx(SubmitButton, {\n          title: \"Login\"\n        })]\n      }), _jsx(PurpleAppButton, {\n        title: \"Register\"\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  logo: {\n    width: 300,\n    height: 300,\n    alignSelf: \"center\",\n    marginTop: 20,\n    marginBottom: 10\n  },\n  background: {\n    flex: 1,\n    backgroundColor: colors.pinkbackground\n  },\n  forgotpassword: {\n    color: colors.greytext,\n    fontSize: 14,\n    alignSelf: \"center\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/ethanchen/Documents/GitHub/Plenty-of-Pups/app/screens/LoginScreen.js"],"names":["React","Formik","Yup","ErrorMessage","AppText","PinkAppButton","PurpleAppButton","AppTextInput","Screen","colors","AppForm","AppFormField","SubmitButton","validationSchema","object","shape","email","string","required","label","password","min","LoginScreen","props","styles","background","logo","require","values","console","log","forgotpassword","StyleSheet","create","width","height","alignSelf","marginTop","marginBottom","flex","backgroundColor","pinkbackground","color","greytext","fontSize"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,YAAP;AACA,OAAOC,OAAP;AACA,OAAOC,aAAP;AACA,OAAOC,eAAP;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AAEA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,YAAhC;;;AAEA,IAAMC,gBAAgB,GAAGX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,KAAK,EAAEd,GAAG,CAACe,MAAJ,GAAaC,QAAb,GAAwBF,KAAxB,GAAgCG,KAAhC,CAAsC,OAAtC,CADmC;AAE1CC,EAAAA,QAAQ,EAAElB,GAAG,CAACe,MAAJ,GAAaC,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B,EAA+BF,KAA/B,CAAqC,UAArC;AAFgC,CAAnB,CAAzB;;AAKA,SAASG,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAEE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,UAApB;AAAA,cACE,MAAC,MAAD;AAAA,iBACE,KAAC,KAAD;AAAO,QAAA,KAAK,EAAED,MAAM,CAACE,IAArB;AAA2B,QAAA,MAAM,EAAEC,OAAO;AAA1C,QADF,EAGE,MAAC,OAAD;AACE,QAAA,aAAa,EAAE;AAAEX,UAAAA,KAAK,EAAE,EAAT;AAAaI,UAAAA,QAAQ,EAAE;AAAvB,SADjB;AAEE,QAAA,QAAQ,EAAE,kBAACQ,MAAD;AAAA,iBAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAZ;AAAA,SAFZ;AAGE,QAAA,gBAAgB,EAAEf,gBAHpB;AAAA,mBAKE,KAAC,YAAD;AACE,UAAA,cAAc,EAAC,MADjB;AAEE,UAAA,WAAW,EAAE,KAFf;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,YAAY,EAAC,eAJf;AAKE,UAAA,IAAI,EAAC,OALP;AAQE,UAAA,WAAW,EAAC,OARd;AASE,UAAA,eAAe,EAAC;AATlB,UALF,EAgBE,KAAC,YAAD;AACE,UAAA,cAAc,EAAC,MADjB;AAEE,UAAA,WAAW,EAAE,KAFf;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,IAAI,EAAC,UAJP;AAOE,UAAA,WAAW,EAAC,UAPd;AAQE,UAAA,eAAe,MARjB;AASE,UAAA,eAAe,EAAC;AATlB,UAhBF,EA2BE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEW,MAAM,CAACO,cAApB;AAAA;AAAA,UA3BF,EA4BE,KAAC,YAAD;AAAc,UAAA,KAAK,EAAC;AAApB,UA5BF;AAAA,QAHF,EAiCE,KAAC,eAAD;AAAiB,QAAA,KAAK,EAAC;AAAvB,QAjCF;AAAA;AADF,IAFF;AAyCD;;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,IAAI,EAAE;AACJQ,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,SAAS,EAAE,QAHP;AAIJC,IAAAA,SAAS,EAAE,EAJP;AAKJC,IAAAA,YAAY,EAAE;AALV,GADyB;AAQ/Bb,EAAAA,UAAU,EAAE;AACVc,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE/B,MAAM,CAACgC;AAFd,GARmB;AAY/BV,EAAAA,cAAc,EAAE;AACdW,IAAAA,KAAK,EAAEjC,MAAM,CAACkC,QADA;AAEdC,IAAAA,QAAQ,EAAE,EAFI;AAGdR,IAAAA,SAAS,EAAE;AAHG;AAZe,CAAlB,CAAf;AAqDA,eAAed,WAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View, Image, Text } from \"react-native\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport ErrorMessage from \"../components/forms/ErrorMessage\";\nimport AppText from \"../components/AppText\";\nimport PinkAppButton from \"../components/PinkAppButton\";\nimport PurpleAppButton from \"../components/PurpleAppButton\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport Screen from \"../components/Screen\";\nimport colors from \"../config/colors\";\n\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).label(\"Password\"),\n});\n\nfunction LoginScreen(props) {\n  return (\n\n    <View style={styles.background}>\n      <Screen>\n        <Image style={styles.logo} source={require(\"../assets/PofP1.png\")} />\n\n        <AppForm\n          initialValues={{ email: \"\", password: \"\" }}\n          onSubmit={(values) => console.log(values)}\n          validationSchema={validationSchema}\n        >\n          <AppFormField\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            icon=\"email\"\n            keyboardtype=\"email-address\"\n            name=\"email\"\n            //   onBlur={() => setFieldTouched(\"email\")}\n            //   onChangeText={handleChange(\"email\")}\n            placeholder=\"Email\"\n            textContentType=\"emailAddress\"\n          />\n          <AppFormField\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            icon=\"lock\"\n            name=\"password\"\n            //   onBlur={() => setFieldTouched(\"password\")}\n            //   onChangeText={handleChange(\"password\")}\n            placeholder=\"Password\"\n            secureTextEntry\n            textContentType=\"password\"\n          />\n          <Text style={styles.forgotpassword}>Forgot my password</Text>\n          <SubmitButton title=\"Login\" />\n        </AppForm>\n        <PurpleAppButton title=\"Register\"></PurpleAppButton>\n      </Screen>\n    </View>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  logo: {\n    width: 300,\n    height: 300,\n    alignSelf: \"center\",\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  background: {\n    flex: 1,\n    backgroundColor: colors.pinkbackground,\n  },\n  forgotpassword: {\n    color: colors.greytext,\n    fontSize: 14,\n    alignSelf: \"center\",\n  },\n});\n// function LoginScreen(props) {\n//   return (\n//     <View style={styles.background}>\n//       <View style={styles.logoContainer}>\n//         <Image style={styles.logo} source={require(\"../assets/PofP1.png\")} />\n//       </View>\n//       <AppTextInput placeholder=\"Email\" />\n//       <View style={styles.buttonsContainer}>\n//         <AppButton title=\"Login\" />\n//       </View>\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   background: {\n//     backgroundColor: \"#f8f4f1\",\n//     flex: 1,\n//     justifyContent: \"flex-end\",\n//     alignItems: \"center\",\n//   },\n//   logo: {\n//     width: 400,\n//     height: 400,\n//   },\n//   logoContainer: {\n//     position: \"absolute\",\n//     top: 30,\n//   },\n//   buttonsContainer: {\n//     padding: 20,\n//     width: \"100%\",\n//   },\n// });\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}